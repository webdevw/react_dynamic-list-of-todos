{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","choosingRow","choosingUserTodo","choosingUser","className","map","todo","title","id","completed","clicked","classNames","type","onClick","TodoFilter","changeState","searched","selected","name","value","onChange","event","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userTodo","removeModal","useState","user","setUser","userId","useEffect","getUser","todosFromServer","catch","error","window","console","message","href","email","App","setTodos","setUserTodo","isTodoModal","setIsTodoModal","isSelected","isSearched","isActiveModal","selectedTodo","setSelectedTodo","status","words","field","newValue","filter","toLowerCase","includes","todoUser","switcher","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74882bfb.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  choosingUser: (userId: Todo) => void,\n  choosingRow?: number,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    choosingRow,\n    choosingUser: choosingUserTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const {\n          title, id, completed,\n        } = todo;\n\n        const clicked = choosingRow === id;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n            className={\n              classNames(\n                { 'has-background-info-light': clicked },\n              )\n            }\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                { title }\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  choosingUserTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  {clicked ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  searched: string,\n  selected: string,\n  changeState: (select: string, input: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  { changeState, searched, selected },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            name=\"select\"\n            data-cy=\"statusSelect\"\n            value={selected}\n            onChange={\n              (event) => changeState(event.target.name, event.target.value)\n            }\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          name=\"input\"\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searched}\n          onChange={\n            (event) => changeState(event.target.name, event.target.value)\n          }\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searched.length > 0 && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => changeState('input', '')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => (get<Todo[]>('/todos'));\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userTodo: Todo,\n  removeModal: (switcher: boolean) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ userTodo, removeModal }) => {\n  const [user, setUser] = useState<User>();\n  const {\n    userId, title, id, completed,\n  } = userTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then((todosFromServer) => setUser(todosFromServer))\n      .catch(error => window.console.error(error.message));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => removeModal(false)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [userTodo, setUserTodo] = useState<Todo>();\n  const [isTodoModal, setIsTodoModal] = useState(false);\n  const [selected, isSelected] = useState('all');\n  const [searched, isSearched] = useState('');\n  const isActiveModal = userTodo && isTodoModal;\n  const [selectedTodo, setSelectedTodo] = useState(userTodo?.id || -1);\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => setTodos(todosFromServer));\n  }, []);\n\n  const changeState = (field: string, newValue: string) => {\n    switch (field) {\n      case 'select':\n        isSelected(newValue);\n        break;\n      case 'input':\n        isSearched(newValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const todoFiltered = (status: string, words: string) => {\n    if (selected === 'all' && !searched) {\n      return todos;\n    }\n\n    return todos.filter((todo) => {\n      switch (status) {\n        case 'completed':\n          return todo.completed;\n        case 'active':\n          return !todo.completed;\n        case 'all':\n        default:\n          return todo;\n      }\n    })\n      .filter(\n        (todo) => todo.title\n          .toLowerCase()\n          .includes(words\n            .toLowerCase()),\n      );\n  };\n\n  const choosingUser = (todoUser: Todo) => {\n    setUserTodo(todoUser);\n    setSelectedTodo(todoUser.id);\n    setIsTodoModal(true);\n  };\n\n  const changeModalVisibility = (switcher: boolean) => {\n    setIsTodoModal(switcher);\n    setSelectedTodo(0);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                changeState={changeState}\n                selected={selected}\n                searched={searched}\n              />\n            </div>\n\n            <div className=\"block\">\n              {(todos.length > 0)\n                ? (\n                  <TodoList\n                    todos={todoFiltered(selected, searched)}\n                    choosingUser={choosingUser}\n                    choosingRow={selectedTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isActiveModal && (\n        <TodoModal\n          userTodo={userTodo}\n          removeModal={changeModalVisibility}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}